; :Práctica 1: ;

; :Proposiciones y Condicionales:  :Leyes de Reducción:

; - Ejercicios -


; 1. Diremos que una imagen es flaca si su alto es mayor o igual a su ancho.
; Caso contrario diremos que es gorda. Defina una función que tome como
; argumento una imagen, y la clasifique en "Flaca" o "Gorda"


(define appa .)

(define (gorda? h a)(>=(image-width a)(image-height h)))
  
(define (flaca_gorda imagen) (if (>= (image-height imagen) (image-width imagen)) "Flaca" "Gorda"))
 
(flaca_gorda appa)

; 2. Modifique el ejercicio anterior para que ahora clasifique las imágenes en
; "Flaca", "Gorda" o "Cuadrada" (si su alto es igual a su ancho).

(define (flaca-gorda-cuadrada imagen) (if (=(image-height imagen)(image-width imagen)) "Cuadrada" (if (> (image-height imagen) (image-width imagen)) "Flaca" "Gorda")))
(define (flaca-gorda-cuadrada2 imagen) (if (=(image-height imagen)(image-width imagen)) "Cuadrada" (flaca_gorda imagen)))

(define (fgc imagen) (cond [(=(image-height imagen)(image-width imagen)) "cuadradita"]
                           [(> (image-height imagen)(image-width imagen)) "flaquita"]
                           [(< (image-height imagen)(image-width imagen)) "gordita"]))

(fgc appa)
(flaca-gorda-cuadrada2 appa)


; 3. Defina una función que dado tres números que representan la amplitud
; de los tres ángulos interiores de un triánguno, devuelva un string que nos
; indique si es equilátero, isósceles o escaleno.

(define (triangulo a b c) (if (= a b c) "Equilatero" (if (or (= a b) (= b c) (= a c)) "Isoceles" "Escaleno")))

(define (triangulo2 a b c)(cond [(= a b c) "Equilatero"]
                                [(= a b) "Isosceles"]
                                [(= a c) "Isosceles"]
                                [(= b c) "Isosceles"]
                                [else " Escaleno"]))

(triangulo 60 60 60)
(triangulo2 70 60 60)

; 4. Modifique el ejercicio anterior para que nos aparezca un string con la
; palabra error en caso que los valores recibidos como argumento no
; correspondan a los ángulos de un triángulo. Ayuda: La suma de los
; ángulos interiores de un triángulo es 180°.

(define (triangulo3 a b c)(cond [(> (+ a b c) 180) "Error"]
                                [(= a b c) "Equilatero"]
                                [(= a b) "Isosceles"]
                                [(= a c) "Isosceles"]
                                [(= b c) "Isosceles"]
                                [else " Escaleno"]))


; (define (triangulo4 a b c)
; (if (and (= (+ a b c) 180) (= a b c)) "Equilatero") ((if (and (= (+ a b c) 180)) (or (= a b)(= b c)(= a c))) "Isosceles" "Escaleno") else "Error")

(define (triangulo5 a b c)
  (if (> (+ a b c) 180) "Error" (if (= a b c) "Equilatero" (if (or (= a b) (= b c) (= a c)) "Isoceles" "Escaleno"))))

(triangulo5 60 100 80)


; 5. La contracción en el consumo ha obligado a El lápiz curioso a extender sus
; ofertas. Al ingresar a la librería, se lee el siguiente cartel:
; Lápices, llevando 5 o más: 15% de descuento.
; Cuadernos, llevando 4 o más: 10% de descuento.

(define PC 60)
(define PL 8)

; Estos valores representan el precio unitario de los cuadernos y lápices
; respectivamente. Defina una función que, dados dos valores c y l,
; devuelva el monto a pagar si se compran c cuadernos y l lápices. Sería
; bueno que en la definición aparezcan las constantes PL y PC, así su
; función será más fácil de modificar si hay cambios de precios.


; (define (cuaderno c)
;   (if(>= c 4)(* c PC 0.90)(* c PC)))
; 
; (define (lapices l)
;   (if(>= l 5)(* l PL 0.85)(* l PL)))
; 
; (define (compra c l)
;   (+(lapices l)(cuaderno c)))
; 


; alternativa

(define (compra c l)
  (+(if(>= c 4)(* c PC 0.90)(* c PC))
    (if(>= l 5)(* l PL 0.85)(* l PL))))

; 6. Luego de un tiempo, las cosas siguen difíciles para El lápiz curioso.
; Además del cartel del ejercicio anterior, se lee el siguiente:

; Llevando 10 o más unidades, 18% de descuento.

; Obviamente, si en una compra aplica más de una oferta, al cliente se le
; hace aquel descuento que más lo beneficie.
; Considere nuevamente la consigna del ejercicio anterior, pero defina una
; nueva función para contemplar la nueva oferta.
                                    
(define (superdescuento c l)
  (if (>= (+ c l)10)(+(* c PC 0.82)(* l PL 0.82))
  (+(if(>= c 4)(* c PC 0.90)(* c PC))
    (if(>= l 5)(* l PL 0.85)(* l PL)))))

; 7. Redefina, la función pitagorica? de la Práctica 0 usando if.

                                    


